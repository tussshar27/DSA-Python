Q. Difference between sorted() and sort() function.
nuts = ['@', '#', '$', '%', '^', '&', ')'] 
print(sorted(nuts))    #sorted() works directly with the output i.e with print()
nuts.sort()            #sort() makes the list actual sort
print(nuts)
output:
['#', '$', '%', '&', ')', '@', '^']
['#', '$', '%', '&', ')', '@', '^']

1. How to Add Two Numbers in Python – Easy Programs
a = int(input("Enter 1st number: "))        #calling int() function because by default input() function generates string value from user.
b = int(input("Enter 2nd number: "))

def addition(a,b):
    return a + b
    
print(f'1st number: {a} and 2nd number: {b} then addition of both: {addition(a,b)}')
output:
Enter 1st number: 10
Enter 2nd number: 20
1st number: 10 and 2nd number: 20 then addition of both: 30

=== Code Execution Successful ===

2. Find Maximum of two numbers in Python
a = int(input("Enter 1st number: "))
b = int(input("Enter 2st number: "))

def maximum(a,b):
    if a>b:
        print(f'{a} is greater than {b}')
    else:
        print(f'{b} is greater than {a}')
        
maximum(a,b)
output:
Enter 1st number: 10
Enter 2st number: 20
20 is greater than 10

=== Code Execution Successful ===

#using lambda function
a = int(input("Enter 1st number: "))
b = int(input("Enter 2st number: "))

maximum = lambda a,b: a if a>b else b

print(maximum(a,b))
ouptut:
Enter 1st number: 10
Enter 2st number: 20
20

=== Code Execution Successful ===

#using list compression
a=10
b=20
maximum = [a if a>b else b]
print(maximum)
output:
[20]

=== Code Execution Successful ===

3.Python Program to Find the Factorial of a Number.
a=5
ft=1
while a>=1:
    ft = ft*a
    a-=1
    
print(ft)
output:
120

=== Code Execution Successful ===

4.Python Program for Simple Interest.
p=100
r=10
t=12

def simpleinterest(p,r,t):
    return (p*r*t)/100
print(simpleinterest(p,r,t))
output:
120.0

=== Code Execution Successful ===

5.Python Program for Compound Interest.
formula:
# A = P(1 + R/100) t 
# Compound Interest = A – P 
# where,
# A is amount 
# P is the principal amount 
# R is the rate and 
# T is the time span
p=100
r=10
t=12

def compoundinterest(p,r,t):
    a = p * (pow((1 + r/100),t))         #with using pow function
    #a = p * ((1 + r/100)**t)            #without using pow(,) function
    ci = a - p
    return ci

print(compoundinterest(p,r,t))
output:
213.8428376721003

=== Code Execution Successful ===

6. Python Program to Check Armstrong Number.
a = int(input("Enter number:"))        #eg.153
m = a
l = len(str(a))
f = 0
while a!=0:
    r = a % 10
    f = f + pow(r,l)
    a = a // 10
    
if m==f:
    print("This is an Armstrong number")
else:
    print("This is not an Armstrong number")
output:
Enter number:123
This is not an Armstrong number

=== Code Execution Successful ===

7. Python Program to Find Area of a Circle
#Area = pi * r2
#where r is radius of circle 
r = 10
pi = 3.14

print(f'Area of circle: {pi * r**2}')
print(f'Area of circle: {pi * pow(r,2)}')   #using pow() function
output:
Area of circle: 314.0
Area of circle: 314.0

=== Code Execution Successful ===

8. Python Program to Print all Prime numbers in an Interval.
# 2, 3, 5, 7, 11, …
s=int(input("Enter start number: "))
e=int(input("Enter end number: "))
l=[]
for i in range(s,e+1):
    if i==0 or i==1:
        continue
    else:
        for j in range(2,int(i/2)):    #using for - else loop
            if i%j==0:
                break                #then it is not a prime no, get out of loop and change value of i
        else:                        #If the loop breaks, the else block is not executed.
            l.append(i)
print(l)
output:
Enter start number: 2
Enter end number: 20
[2, 3, 4, 5, 7, 11, 13, 17, 19]

=== Code Execution Successful ===

9. Python Program to Check Prime Number.
# 2, 3, 5, 7, 11, …

def prime(n):
    for i in range(2,int(n/2)):
        if n%i==0:
            return False
        
    return True

print(prime(6))
output:
False

=== Code Execution Successful ===

10. Python Program to Print the Fibonacci sequence.
#Fibonacci series: 0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, …
n = int(input("Enter number: "))
i = 0
j = 1
a = 0
l = [0,1]
while a < n:
    a = i + j
    i = j
    j = a
    l.append(a)
print(l)
output:
Enter number: 100
[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144]

=== Code Execution Successful ===

11. Program to print ASCII Value of a character.
a = input("Enter a character: ")
print(f'ASCII value of character {a} is {ord(a)}')
output:
Enter a character: a
ASCII value of character a is 97

=== Code Execution Successful ===

12. Addition of elements of a list
# Online Python compiler (interpreter) to run Python online.
# Write Python 3 code in this online editor and run it.
l1 = [10,20,30,40,50]
def addition(l1):
    a = 0
    for i in l1:
        a = i + a
    return a
print(addition(l1))
output:
150










