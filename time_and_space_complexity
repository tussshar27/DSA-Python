Big O notation: It gives the worst case of the algorithm. Also, it helps in comparing the efficiency of different algorithms and understanding their scalability with large inputs.
To calculate Time complexity:
1. Ignore constant.
2. Take only the highest value as a worst case.

O(1) Constant Time Complexity: whatever the input size, the time taken to process the algorithm will be constant.
Example: print statement inside a function, accessing an array with index arr[2]

O(N) Linear/Linar Time Complexity: when input size increases then the time taken to process also increases linearly. 
Mathematically on scale, it is x = y.
Example: using loop to print all the elements of an array or all the chars of a string.



