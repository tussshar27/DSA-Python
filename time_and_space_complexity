Big O notation: It gives the worst case of the algorithm. Also, it helps in comparing the efficiency of different algorithms and understanding their scalability with large inputs.

O(1): whatever the input size, the time taken to process the algorithm will be constant.

O(N) : when input size increases then the time taken to process also increases linearly. 
Mathematically on scale, it is x = y.
To calculate Time complexity:
1. Ignore constant.
2. Take only the highest value as a worst case. 
  
