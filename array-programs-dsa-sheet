DSA Sheet Link: https://drive.google.com/file/d/1TnKvdZ2lQcY78o4ZUg2ul5v0tEqzwrqF/view

1. Find two elements with given sum.
l1 = [11,20,33,40,55,30,1]
n = 31   

def myfunc(l1,n):
  l2 = []
  for i in range(0,len(l1)):
    for j in range(i+1,len(l1)):
      if l1[i] + l1[j] == n:
        l2.append((l1[i],l1[j]))
  return l2
        
  return "Please enter valid sum number."
print(myfunc(l1,n))
output:
[(11, 20), (30, 1)]

2. Find the Majority Element in an array.
#A majority element in an array A[] of size n is an element that appears more than n/2 times (and hence there is at most one such element). 
l1 = [10,20,30,20,20,20,50,20,20,40]
n = 10

def myfunc(l1,n):
  a = n//2
  for i in range(0,len(l1)):
    count = 1
    for j in range(i+1,len(l1)):
      if l1[i] == l1[j]:
        count += 1
    if count > a:
      return l1[i]
      
  return "No Majority Element Number Found."
print(myfunc(l1,n))
output:
20

3. Find the number occuring odd number of times.
l1 = [1, 2, 2, 3, 3, 3, 1]

def myfunc(l1):

  for i in range(0,len(l1)):
    count = 1
    # print(l1[i])
    for j in range(i+1,len(l1)):
      if l1[i] == l1[j]:
        count += 1
      # print(l1[j])
      # print(count)
      # print('---')
    if count != 1 & count % 2 != 0:
      return l1[i]
print(myfunc(l1))

output:
3

4. Merge an array of size n into another array of size m+n.
NA = -1
l1 = [2, 8, NA, NA, NA, 13, NA, 15, 20] 
l2 = [5, 7, 9, 25]

def myfunc(l1,l2):
  l3 = []
  for i in range(0,len(l1)):
    if l1[i] == -1:
      l3.append(i)
  
  for j in range(0,len(l2)):
    n = l3[j]
    l1[n] = l2[j]
    
  return l1


def diff(l1,l2):
  count = 0
  for i in l1:
    if i == -1:
      count += 1
  if count == len(l2):
    return True
  return False
  
  
if diff(l1,l2):
  print(myfunc(l1,l2))
else:
  print("List count not matching")
  
  print(diff(l1,l2))
output:
[2, 8, 5, 7, 9, 13, 25, 15, 20]

5. Rotate an array.
l1 = [1, 2, 3, 4, 5, 6, 7]
d = 2
def myfunc(l1,d):
  l1[0:d] = l1[0:d][::-1]
  
  l1[d:] = l1[d:][::-1]
  
  return l1[::-1]
  
print(myfunc(l1,d))
output:
[3, 4, 5, 6, 7, 1, 2]

6. Leaders in an array.
# Write a program to print all the LEADERS in the array. 
# An element is a leader if it is greater than all the elements to its right side. And the rightmost element is always a leader. 
l1 = [16, 17, 4, 3, 5, 2]

def myfunc(l1):
  for i in range(0,len(l1)):
    count = 0
    for j in range(i+1,len(l1)):
      if l1[i] < l1[j]:
        count += 1
        
    if count == 0:
      print(l1[i],end = ' ')

myfunc(l1)
output:
17 5 2

7. Check for Majority Element in a sorted array.
# Given an array arr of N elements,  A majority element in an array arr of size N is an element that appears more than N/2 times in the array.
l1 = [1,5,5,5,5,6]

def myfunc(l1):
  l = len(l1)//2
  for i in range(0,len(l1)):
    count = 1
    for j in range(i+1,len(l1)):
      if l1[i] == l1[j]:
        count += 1
    if count > l:
      return f'{l1[i]} occurs more than {l} times in array.'
  return f'No element occurs more than {l} times in array.'
      
print(myfunc(l1))
output:
5 occurs more than 3 times in array.

8. Segregate 0s and 1s in an array.
# You are given an array of 0s and 1s in random order. 
# Segregate 0s on left side and 1s on right side of the array [Basically you have to sort the array]. Traverse array only once. 
l1 = [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0]

def myfunc(l1):
  count = 0
  for i in range(0,len(l1)):
    if l1[i] == 0:
      count += 1
  z = count
  n = len(l1) - z
  
  for j in range(0,z):
    l1[j] = 0
  for k in range(z,len(l1)):
    l1[k] = 1
  return l1
  
print(myfunc(l1))
output:
[0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1]

9. Product of Array except itself.
Input: arr[]  = {10, 3, 5, 6, 2}
Output: prod[]  = {180, 600, 360, 300, 900}
3 * 5 * 6 * 2 product of other array 
elements except 10 is 180
10 * 5 * 6 * 2 product of other array 
elements except 3 is 600
10 * 3 * 6 * 2 product of other array 
elements except 5 is 360
10 * 3 * 5 * 2 product of other array 
elements except 6 is 300
10 * 3 * 6 * 5 product of other array 
elements except 2 is 900

l1 = [10, 3, 5, 6, 2]
def myfunc(l1):
  l2 = []
  for i in range(0,len(l1)):
    count = 1
    for j in range(0,len(l1)):
      if l1[i] == l1[j]:
        continue
      else:
        count *= l1[j]
    l2.append(count)
  return l2
  
print(myfunc(l1))
output:
[180, 600, 360, 300, 900]

10. Find the two repeating elements in a given array.
# All elements of the array are in the range of 1 to N. And all elements occur once except two numbers which occur twice. Find the two repeating numbers. 
l1 = [4, 2, 4, 5, 2, 3, 1]
n = 5

def myfunc(l1,n):
  l2 = []
  for i in range(0,len(l1)):
    count = 1
    for j in range(i+1,len(l1)):
      if l1[i] == l1[j]:
        count += 1
    if count == 2:
      print((l1[i]),end=' ')
  
  
myfunc(l1,n)
output:
4 2

11. Find the smallest missing number.

12. Given an array arr[], find the maximum j â€“ i such that arr[i] <= arr[j].

13. Find Subarray with given sum | Set 1 (Non-negative Numbers).
l1 = [1, 4, 20, 3, 10, 5]
sum = 33
def myfunc(l1,sum):
  for i in range(0,len(l1)):
    count = 0
    for j in range(i,len(l1)):
      if count < sum:
        count += l1[j]
      if count == sum:
        print(l1[i:j+1])
        return f'sum found between indexes {i} and {j}'
print(myfunc(l1,sum))
output:
[20, 3, 10]
sum found between indexes 2 and 4

14. Find the smallest positive number missing from an unsorted array | Set 1.
















