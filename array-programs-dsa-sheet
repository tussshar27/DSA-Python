DSA Sheet Link: https://drive.google.com/file/d/1TnKvdZ2lQcY78o4ZUg2ul5v0tEqzwrqF/view

1. Find two elements with given sum.
l1 = [11,20,33,40,55,30,1]
n = 31   

def myfunc(l1,n):
  l2 = []
  for i in range(0,len(l1)):
    for j in range(i+1,len(l1)):
      if l1[i] + l1[j] == n:
        l2.append((l1[i],l1[j]))
  return l2
        
  return "Please enter valid sum number."
print(myfunc(l1,n))
output:
[(11, 20), (30, 1)]

2. Find the Majority Element in an array.
#A majority element in an array A[] of size n is an element that appears more than n/2 times (and hence there is at most one such element). 
l1 = [10,20,30,20,20,20,50,20,20,40]
n = 10

def myfunc(l1,n):
  a = n//2
  for i in range(0,len(l1)):
    count = 1
    for j in range(i+1,len(l1)):
      if l1[i] == l1[j]:
        count += 1
    if count > a:
      return l1[i]
      
  return "No Majority Element Number Found."
print(myfunc(l1,n))
output:
20

3. Find the number occuring odd number of times.
l1 = [1, 2, 2, 3, 3, 3, 1]

def myfunc(l1):

  for i in range(0,len(l1)):
    count = 1
    # print(l1[i])
    for j in range(i+1,len(l1)):
      if l1[i] == l1[j]:
        count += 1
      # print(l1[j])
      # print(count)
      # print('---')
    if count != 1 & count % 2 != 0:
      return l1[i]
print(myfunc(l1))

output:
3

4. Merge an array of size n into another array of size m+n.
NA = -1
mPlusN = [2, 8, NA, NA, NA, 13, NA, 15, 20] 
N = [5, 7, 9, 25]

def myfunc(mPlusN,N):
  # print(mPlusN)
  k = 0
  l1 = []
  for i in range(0,len(mPlusN)):
    if mPlusN[i] == -1:
      l1.append(i)
  for i in range(0,len(l1)):
    n = l1[i]
    mPlusN[n] = N[i] 
  return mPlusN

def diff(mPlusN,N):
  count = 0
  for i in mPlusN:
    if i == -1:
      count += 1
  if count == len(N):
    return True
  return False
 
if diff(mPlusN,N):
  print(myfunc(mPlusN,N))
else:
  print("List count not matching")
output:
[2, 8, 5, 7, 9, 13, 25, 15, 20]

5. Rotate an array.
l1 = [1, 2, 3, 4, 5, 6, 7]
d = 2
def myfunc(l1,d):
  l1[0:d] = l1[0:d][::-1]
  
  l1[d:] = l1[d:][::-1]
  
  return l1[::-1]
  
print(myfunc(l1,d))
output:
[3, 4, 5, 6, 7, 1, 2]

6. Leaders in an array.
# Write a program to print all the LEADERS in the array. 
# An element is a leader if it is greater than all the elements to its right side. And the rightmost element is always a leader. 
l1 = [16, 17, 4, 3, 5, 2]

def myfunc(l1):
  for i in range(0,len(l1)):
    count = 0
    for j in range(i+1,len(l1)):
      if l1[i] < l1[j]:
        count += 1
        
    if count == 0:
      print(l1[i],end = ' ')

myfunc(l1)
output:
17 5 2



