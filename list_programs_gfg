https://www.geeksforgeeks.org/python-program-to-interchange-first-and-last-elements-in-a-list/
1. Python program to interchange first and last elements in a list
#using swap
l1 = [1,2,3,4]
def interchange(l1):
    temp = l1[0]
    l1[0] = l1[-1]
    l1[-1] = temp
    return l1
    
print(interchange(l1))
output:
[4, 2, 3, 1]

#2nd method
l1 = [1,2,3,4]
def interchange(l1):
    l1[0],l1[-1] = l1[-1],l1[0]
    return l1
    
print(interchange(l1))
output:
[4, 2, 3, 1]

2. Python Program to Swap Two Elements in a List
l1 = [1,2,3,4]
s = 1
e = 3
def interchange(l1,s,e):
    l1[s-1],l1[e-1] = l1[e-1],l1[s-1]
    return l1
    
print(interchange(l1,s,e))
output:
[3, 2, 1, 4]

3. How To Find the Length of a List in Python
l1 = [1,2,3,4]
def interchange(l1):
    le = len(l1)
    return le
    
print(interchange(l1))
output:
4

#2nd method (using sum() and list comprehension)
l1 = [1,2,3,4]
def interchange(l1):
    le = sum(1 for i in l1)
    return le
    
print(interchange(l1))
output:
4

#3rd method
l1 = [1,2,3,4]
def interchange(l1):
    counter = 0
    
    for i in l1:
        counter += 1
    return counter
    
print(interchange(l1))
output:
4

4. Check if element exists in list in Python
l1 = [1,2,3,4]
c = 30
def interchange(l1,c):
    for i in l1:
        if c == i:
            return True
    return False
    
print(interchange(l1,c))
output:
False

#2nd method
l1 = [1,2,3,4]
c = 30
def interchange(l1,c):
    if c in l1:
        return True
    else:
        return False
    
print(interchange(l1,c))
output:
False

5. Different ways to clear a list in Python
l1 = [1,2,3,4]
def interchange(l1):
    l1.clear()
    return l1
print(interchange(l1))
output:
[]

#2nd method
l1 = [1,2,3,4]
def interchange(l1):
    l1 = []
    return l1
print(interchange(l1))
output:
[]

6. Reversing a List in Python
l1 = [1,2,3,4]
def interchange(l1):
    l2 = l1[::-1]
    return l2
print(interchange(l1))
output:
[4, 3, 2, 1]

#2nd method
l1 = [1,2,3,4]
def interchange(l1):
    l1.reverse()
    return l1
print(interchange(l1))
output:
[4, 3, 2, 1]

#3rd method
l1 = [1,2,3,4]
def interchange(l1):
    l = 0
    r = len(l1)-1
    temp = 0
    while l<r:
        temp = l1[l]
        l1[l] = l1[r]
        l1[r] = temp
        l += 1
        r -= 1
    return l1
print(interchange(l1))
output:
[4, 3, 2, 1]

7. Python program to find sum of elements in list
l1 = [10,2,3,4]

def interchange(l1):
    su = 0
    for i in l1:
        su = su + i
    return su
print(interchange(l1))
output:
19

#2nd method
l1 = [10,2,3,4]

def interchange(l1):
    su = 0
    for i in range(0,len(l1)):
        su = su + l1[i]
    return su
print(interchange(l1))
output:
19

#3rd method (enumerate function)
l1 = [10,2,3,4]

def interchange(l1):
    su = 0
    for i, j in enumerate(l1):
        su += j
    return su
print(interchange(l1))
output:
19

8. Multiply all numbers in the list
l1 = [10,2,3,4]

def myfunc(l1):
    mu = 1
    for i in l1:
        mu *= i
    return mu
print(myfunc(l1))
output:
240

9. Python program to find smallest number in a list
#using sort() function
l1 = [10,2,3,4]

def myfunc(l1):
    l1.sort()
    return l1[0]
print(myfunc(l1))
output:
2

#2nd method using sort() with descending way
l1 = [10,2,3,4]

def myfunc(l1):
    l1.sort(reverse=True)
    return l1[-1]
print(myfunc(l1))
output:
2

#3rd method (using min() function)
l1 = [10,2,3,4]

def myfunc(l1):
    return min(l1)
print(myfunc(l1))
output:
2

10. Python Program to Find Largest Number in a List
#using max() function
l1 = [10,2,3,4]

def myfunc(l1):
    return max(l1)
print(myfunc(l1))
output:
10

#2nd method using sort() with descending way
l1 = [10,2,3,4]

def myfunc(l1):
    l2 = list(set(l1))
    l2.sort(reverse=True)
    return l2[0]
print(myfunc(l1))
output:
10

11. Python program to find second largest number in a list
l1 = [10,10,2,3,4]

def myfunc(l1):
    l2 = list(set(l1))
    l2.sort(reverse=True)
    return l2[1]
print(myfunc(l1))

output:
4

12. Python program to find N largest elements from a list
l1 = [10,2,30,4,5]
n = 3
def myfunc(l1,n):
    l2 = []
    for i in range(0,n):
        l2.append(l1[i])
    return l2
print(myfunc(l1,n))
output:
[10, 2, 30]

#2nd method (using single list)
l1 = [10,2,30,40,5]
n = 3
def myfunc(l1,n):
    r = len(l1) - n
    for i in range(r):
        l1.pop()
    return l1

print(myfunc(l1,n))
output:
[10, 2, 30]

13. Python program to print even numbers in a list
l1 = [10,23,31,42,5]
def myfunc(l1):
    l2 = []
    for i in range(len(l1)):
        if l1[i] % 2 == 0:
            l2.append(l1[i])

    return l2
print(myfunc(l1))
output:
[10, 42]

#2nd method (using single list)
l1 = [10,23,31,42,5]
def myfunc(l1):
    for i in range(len(l1)):
        if l1[i] % 2 == 0:
            print(l1[i],end=" ")
myfunc(l1)
output:
10 42

#3rd method
l1 = [10,23,31,42,5]
def myfunc(l1):
    for i in range(len(l1)):
        if l1[i] % 2 == 0:
            print(l1[i])
myfunc(l1)
output:
10
42

14. Python program to print odd numbers in a List
l1 = [2, 7, 5, 64, 14]
def myfunc(l1):
    for i in range(len(l1)):
        if l1[i] % 2 != 0:
            print(l1[i],end=' ')
myfunc(l1)
output:
7 5

#2nd method (using pass)
l1 = [2, 7, 5, 64, 14]
def myfunc(l1):
    for i in range(len(l1)):
        if l1[i] % 2 == 0:
            pass
        else:
            print(l1[i],end=' ')
myfunc(l1)
output:
7 5

#3rd method (using enumerate() function)
l1 = [2, 7, 5, 64, 14]
def myfunc(l1):
    for i,j in enumerate(l1):
        if j % 2 != 0:
            print(j,end=' ')
myfunc(l1)
output:
7 5

15. Python program to print all even numbers in a range
s = 1
e = 15
def myfunc(s,e):
    for i in range(s,e+1):
        if i % 2 == 0:
            print(i,end=" ")
myfunc(s,e)
output:
2 4 6 8 10 12 14 

#2nd method (using user input)
s = int(input("Enter start number: "))
e = int(input("Enter end number: "))
def myfunc(s,e):
    for i in range(s,e+1):
        if i % 2 == 0:
            print(i,end=" ")
myfunc(s,e)
output:
Enter start number: 1
Enter end number: 20
2 4 6 8 10 12 14 16 18 20 

16. Python program to print all odd numbers in a range
s = int(input("Enter start number: "))
e = int(input("Enter end number: "))
def myfunc(s,e):
    for i in range(s,e+1):
        if i % 2 != 0:
            print(i,end=" ")
myfunc(s,e)
output:
Enter start number: 1
Enter end number: 20
1 3 5 7 9 11 13 15 17 19 

17. Python program to print positive numbers in a list
l1 = [12,-34,27,53,-8]
def myfunc(l1):
    for i in l1:
        if i > 0:
            print(i,end=" ")
myfunc(l1)
output:
12 27 53

#2nd method (using while loop)
l1 = [12,-34,27,53,-8]
def myfunc(l1):
    n = 0
    while n < len(l1):
        if l1[n] > 0:
            print(l1[n],end=" ")
        n += 1
myfunc(l1)
output:
12 27 53

#3rd method (using enumerate() function)
l1 = [12,-34,27,53,-8]
print([j for i,j in enumerate(l1) if j > 0])
output:
[12, 27, 53]

18. Python program to print negative numbers in a list
#using enumerate() function with condition and list comprehension
l1 = [12,-34,27,53,-8]
print([j for i,j in enumerate(l1) if j < 0])
output:
[-34, -8]

#2nd method (using while loop)
l1 = [12,-34,27,53,-8]
def myfunc(l1):
    n = 0
    while n < len(l1):
        if l1[n] < 0:
            print(l1[n],end=" ")
        
        n += 1
myfunc(l1)
output:
-34 -8

19. Python program to print all positive numbers in a range
s = -4
e = 10
def myfunc(s,e):
    if s < 0:
        for i in range(e+1):
            print(i,end=" ")
    else:
        for i in range(s,e+1):
            print(i,end=" ")
myfunc(s,e)
output:
0 1 2 3 4 5 6 7 8 9 10 

#2nd example
s = 4
e = 10
def myfunc(s,e):
    if s < 0:
        for i in range(e+1):
            print(i,end=" ")
    else:
        for i in range(s,e+1):
            print(i,end=" ")
myfunc(s,e)
output:
4 5 6 7 8 9 10

20. Python program to print all negative numbers in a range
s = -4
e = -2
def myfunc(s,e):
    if e > 0:
        for i in range(s,0):
            print(i,end=" ")
    else:
        for i in range(s,e+1):
            print(i,end=" ")
myfunc(s,e)
output:
-4 -3 -2

22. Python â€“ Remove empty List from List
#using list comprehension
l1 = [5,6,[],7,[],23]
def myfunc(l1):
    l = [a for a in l1 if a != []]
    return l
print(myfunc(l1))
output:
[5, 6, 7, 23]

=== Code Execution Successful ===
#2nd method (using another list)
l1 = [5,6,[],7,[],23]
def myfunc(l1):
    l2 = []
    for i in l1:
        if i:
            l2.append(i)
    
    return l2
print(myfunc(l1))
output:
[5, 6, 7, 23]

=== Code Execution Successful ===
#3rd method (using enumerate() function)
l1 = [5,6,[],7,[],23]
def myfunc(l1):
    l = [j for i,j in enumerate(l1) if j != []]
    
    return l
print(myfunc(l1))
output:
[5, 6, 7, 23]

=== Code Execution Successful ===

23. Cloning or Copying a list
l1 = [5,6,[],7,[],23]
def myfunc(l1):
    l2 = l1.copy()
    return l2
print(myfunc(l1))
output:
[5, 6, [], 7, [], 23]

=== Code Execution Successful ===
#2nd method (using slicing technique)
l1 = [5,6,[],7,[],23]
def myfunc(l1):
    l2 = l1[:]
    return l2
print(myfunc(l1))
output:
[5, 6, [], 7, [], 23]

=== Code Execution Successful ===
#3rd method (using list comprehension)
l1 = [5,6,[],7,[],23]
def myfunc(l1):
    l2 = [i for i in l1]
    return l2
print(myfunc(l1))
output:
[5, 6, [], 7, [], 23]

=== Code Execution Successful ===

24. Count occurrences of an element in a list
l1 = [5,6,[],7,5,[],23,5]
n = 5
def myfunc(l1,n):
    l2 = []
    for i in l1:
        if i == n:
            l2.append(i)
    return len(l2)
print(myfunc(l1,n))
output:
3

=== Code Execution Successful ===
#2nd method (using single list)
l1 = [5,6,[],7,5,[],23,5]
n = 5
def myfunc(l1,n):
    count = 0
    for i in l1:
        if i == n:
            count += 1
    return count
print(myfunc(l1,n))
output:
3

=== Code Execution Successful ===
#3rd method (using list comprehension)
l1 = [5,6,[],7,5,[],23,5]
n = 5
def myfunc(l1,n):
    l = [a for a in l1 if a == n]
    return len(l)
print(myfunc(l1,n))
output:
3

=== Code Execution Successful ===
#4th method (using enumerate() function)
l1 = [5,6,[],7,5,[],23,5]
n = 5
def myfunc(l1,n):
    l = [j for i,j in enumerate(l1) if j == n]
    return len(l)
print(myfunc(l1,n))
output:
3

=== Code Execution Successful ===
#5th method (using count() function)
l1 = [5,6,[],7,5,[],23,5]
n = 5
def myfunc(l1,n):
    return l1.count(n)
print(myfunc(l1,n))
output:
3

=== Code Execution Successful ===

25. Remove empty tuples from a list
from collections import Counter
l1 = [('T','A'),(),(7,5),(),(23,5,10)]
n = 5
def myfunc(l1,n):
    l = [i for i in l1 if i]
    return l
print(myfunc(l1,n))
output:
[('T', 'A'), (7, 5), (23, 5, 10)]

=== Code Execution Successful ===
#2nd method
from collections import Counter
l1 = [('T','A'),(),(7,5),(),(23,5,10)]
n = 5
def myfunc(l1,n):
    for i in l1:
        if i == ():
            l1.remove(i)
    return l1
print(myfunc(l1,n))
output:
[('T', 'A'), (7, 5), (23, 5, 10)]

=== Code Execution Successful ===

26. Program to print duplicates from a list of integers
from collections import Counter
l1 = [10, 20, 30, 20, 20, 30, 40, 50, -20, 60, 60, -20, -20]
def myfunc(l1):
    s = set()
    l2 = []
    for i in l1:
        if i not in s:
            s.add(i)
        else:
            l2.append(i)
    return list(set(l2))
print(myfunc(l1))
output:
[20, -20, 30, 60]

=== Code Execution Successful ===

27. Python program to find Cumulative sum of a list
from collections import Counter
l1 = [10, 20, 30, 20, 30, 40]
def myfunc(l1):
    l2 = []
    a = 0
    for i in l1:
        a += i
        l2.append(a)
    return l2
print(myfunc(l1))
output:
[10, 30, 60, 80, 110, 150]

=== Code Execution Successful ===

28. Sum of number digits in List
l1 = [12, 67, 98, 34]
def myfunc(l1):
    l2 = []
    for i in l1:
        s = 0
        for j in str(i):
            s += int(j)
        l2.append(s)
    return l2
print(myfunc(l1))
output:
[3, 13, 17, 7]

=== Code Execution Successful ===

29. Break a list into chunks of size N in Python
#IMP using slicing method
l1 = [12, 67, 98, 34,'abc','pqr',27]
n = 3
def myfunc(l1,n):
    for i in range(0,len(l1),n):
        print(l1[i:i+n])
    return
print(myfunc(l1,n))
output:
[12, 67, 98]
[34, 'abc', 'pqr']
[27]
None

=== Code Execution Successful ===

30. Sort the values of first list using second list in Python
x = ["a", "b", "c", "d", "e", "f", "g", "h", "i"]
y = [0,   1,   1,    0,   1,   2,   2,   0,   1]

def myfunc(x,y):
    l1 = zip(y,x)
    l2 = [j for i,j in sorted(l1)]
    return l2
print(myfunc(x,y))
output:
['a', 'd', 'h', 'b', 'c', 'e', 'i', 'f', 'g']

=== Code Execution Successful ===

31. Reverse a list.
l1 = [11,22,33,44]

def myfunc(l1):

  l2 = l1[::-1]
  return l2
  
print(myfunc(l1))
output:
[44, 33, 22, 11]






















